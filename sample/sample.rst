はじめに
=================

最近では一人が数十台、数百台ものサーバーを管理することも珍しくありませ
ん。また、クラウド上にものの数分でサーバーを作成、あるいは削除するこ
とも日常茶飯事です。

その場合、

- 新規作成したサーバーに多数のソフトウェアをインストールする
- 設定ファイルを適切に管理・維持する

といったことが必要になってきます。これを手動で多数のサーバーに対して実
行することは困難ですし、間違いが入り込む余地は非常に大きいです。

そこで重要な位置づけとなってきたツールが **構成管理ツール** です。構成
管理ツールとは、ソフトウェアや設定ファイルなどの対象とするサーバーの構
成を適切に管理し、維持するツールです。新規作成したサーバーなどは指定し
た構成になっておりませんので、構成管理ツールはそのサーバーを自動的に適
切な構成へと変更します。


Ansibleは構成管理ツールの一つです。ただ、それだけにとどまらない、任意の
コマンドをリモートで実行したり、結果を取得したりする **オーケストレーショ
ンツール** でもあります。

オーケストレーションツールの正確な定義は定まっておりませんが、ここでは以下の操作ができるものとします。

- 構成管理が可能
- ソースコードをサーバーにコピーする、再起動する、などのデプロイが可能
- アドホックコマンドにより、任意のコマンドをいつでも複数のサーバーに実行可能
- 他のシステムとの連携をし、複雑な業務のワークフローを支えるシステムを構築可能

Ansibleは、これらのことがすべてできます。単なる構成管理ではなく、デプロ
イなどの定形作業、障害時の非定形作業、あるいは他のシステムとの連携し、
通知や自動実行までAnsible一つで行えます。

個々の操作はそれぞれ別々のツールがあると思います。しかし、これらを一つ
で統一的にこなせるツールは現状ではAnsibleが最も有力でしょう。

Ansibleの特徴
-----------------------------

構成管理ツールおよびオーケストレーションツールについて説明したところで、
ここではAnsibleの特徴を述べ、どのようなものなのか解説していきます。

sshだけがあればいい
++++++++++++++++++++++++++++++++++++++

ChefやPuppetなど、多くの構成管理ツールは、エージェントと呼ばれるソフト
ウェアを操作対象のホストにインストールする必要があります。

しかし、Ansibleは "ssh" が使えればそれだけで使い始められます(実際には
Pythonが必要ですが、ほぼすべてのOSに標準で付属しています)。sshはUNIX系
OSのホストを管理するためには必須のツールであり、極めて一般的です。

サーバーが他社によって管理されており、自由にソフトウェアをインストール
することが出来ない場合もあります。その場合にもAnsibleは使えます。さらに
言うと、sshを適切に設定することにより、踏み台サーバー経由で管理すること
も出来ます。これらはAnsibleの適用場所を広げてくれます。
